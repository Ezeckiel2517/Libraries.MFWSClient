name: Publish to nuget

on:
  push:
    branches: [ release, prerelease ]

jobs:
  build:
    timeout-minutes: 10
    runs-on: 'windows-2022'
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: versionSuffix
      shell: pwsh
      run: |
        $versionSuffix = '${{ github.event.inputs.versionSuffix }}'
        If([string]::IsNullOrEmpty($versionSuffix))
        {
            $versionSuffix = '${{ github.ref_name }}'
        }
        $versionSuffix = '-' + ($versionSuffix -replace '[^a-zA-Z0-9]','-')

        If($versionSuffix -eq '-release')
        {
            $versionSuffix = ''
        }
        If(('-', '-master', '-main') -eq $versionSuffix)
        {
            $versionSuffix = '-prerelease'
        }
        echo "versionSuffix=$versionSuffix" | Out-File -FilePath $Env:GITHUB_ENV -Append

    - name: Get version number
      shell: pwsh
      run: |
        If([string]::IsNullOrEmpty({{ env.versionSuffix }}))
        {
            # No suffix.  Fine.
            $versionNumber = Get-Date -Format "yy.M.${{ github.run_number }}"
        }
        else
        {
            # Suffix; ensure we add .0 in version number to stop them appearing above full releases.
            $versionNumber = Get-Date -Format "yy.M.0.${{ github.run_number }}"
        }
        echo "versionNumber=$versionNumber${{ env.versionSuffix }}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

    - name: Setup MSBuild path
      uses: microsoft/setup-msbuild@v1.1
      with:
        vs-version: '[17.0,)'

    - name: Setup dot net
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Push with dotnet
      run: dotnet nuget push current/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate